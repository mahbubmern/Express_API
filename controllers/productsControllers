const path = require('path');
const { readFileSync, writeFileSync } = require('fs');
const { json } = require('express');


/**
 * @desc get all Products data
 * @name GET /api/v1/product 
 * @access public
 */
const getAllProduct = (req, res)=>{

	const products = JSON.parse(readFileSync(path.join(__dirname, '../db/products.json')))

	res.json(products)



}

/**
 * @desc create product
 * @name POST /api/v1/product
 * @access public
 */


const createProduct = (req, res)=>{
	const products = JSON.parse(readFileSync(path.join(__dirname, '../db/products.json')))


	const {name, slug, regularprice, saleprice,stock,shortdesc,longdesc,catagory,tag} = req.body
	if (!name || !slug, !regularprice || !saleprice || !stock || !shortdesc || !longdesc || !catagory || !tag ) {
		res.status(400).json({
			message : 'All Fields are required'
		})
	} else {

		products.push({
			id : slug +'_'+ Math.floor(Math.random() * 0x1000000).toString(16).substring(1) +'_'+ Math.floor(Math.random() * 0x1000000).toString(16).substring(1),
			name : name,
			slug : slug,
			regularprice : regularprice,
			stock : stock,
			shortdesc : shortdesc,
			longdesc : longdesc,
			catagory : catagory,
			tag : tag
		});
				
		writeFileSync(path.join(__dirname , '../db/products.json'), JSON.stringify(products));
		
		res.status(201).json({
			message : "Product created successfully"
		})
	}
}

/**
 * @desc Get single product's Data
 * @name GET /api/v1/product/:id
 * @access public
 */

const getSingleProduct = (req, res)=>{
	const products = JSON.parse(readFileSync(path.join(__dirname, '../db/products.json')))
	const {id} = req.params
	const singleProduct = products.find(data => data.id == id);

	if (singleProduct) {
		res.status(200).json(singleProduct)
	} else {
		res.status(400).json({
			message : 'Product Not Found'
		})
	}
}

/**
 * @desc Delete single product's Data
 * @name DELETE /api/v1/product/:id
 * @access public
 */


const deleteProduct = (req, res)=>{
	const products = JSON.parse(readFileSync(path.join(__dirname, '../db/products.json')))

	
	

	if (products.some(data => data.id == req.params.id)) {
		const dataAfterDeletion = products.filter(data => data.id != req.params.id);
		writeFileSync(path.join(__dirname, '../db/products.json'), JSON.stringify(dataAfterDeletion))
		res.status(200).json({
			message : 'Product Deletion Successfull'
		})
	} else {
		res.status(404).json({
			message : 'Product Data not Found to delete'
		})
	}
}


/**
 * @desc Update single product's Data
 * @name PUT/PATCH /api/v1/product/:id
 * @access public
 */


const updateProduct = (req, res)=>{
	const products = JSON.parse(readFileSync(path.join(__dirname, '../db/products.json')))

	if (products.some(data => data.id == req.params.id)) {
		products[products.findIndex(data => data.id == req.params.id)] = {
			...products[products.findIndex(data => data.id == req.params.id)],
			...req.body
	
		}
		writeFileSync(path.join(__dirname, '../db/products.json'), JSON.stringify(products))
			res.status(200).json({
				message : 'Product Update Successfull'
			})
	} else {
		res.status(404).json({
			message : 'Product not found to update'
		})
	}
}

module.exports = {
	getAllProduct,
	createProduct,
	getSingleProduct,
	deleteProduct, 
	updateProduct
	
};
