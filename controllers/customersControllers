const path = require('path');
const { readFileSync, writeFileSync } = require('fs');
const { json } = require('express');

/**
 * @desc get all customer data
 * @name GET /api/v1/customer
 * @access public
 */
const getAllCustomer = (req, res) => {
	const customers = JSON.parse(
		readFileSync(path.join(__dirname, '../db/customers.json'))
	);

	res.json(customers);
};

/**
 * @desc create customer
 * @name POST  /api/v1/customer
 * @access public
 */

const createCustomer = (req, res) => {
	const customers = JSON.parse(
		readFileSync(path.join(__dirname, '../db/customers.json'))
	);

	const { name, email, cell, location, zipcode, shippingaddress, billingaddress } = req.body;
	if (!name || !email || !cell || !location || !zipcode || !shippingaddress || !billingaddress) {
		res.status(400).json({
			message: 'all fields are required',
		});
	} else {
		customers.push({
			id: Math.floor(Math.random() * 0x1000000).toString(16).substring(1)+'_'+Math.floor(Math.random() * 0x1000000).toString(16).substring(1),
			name: name,
			email: email,
			cell: cell,
			location: location,
			zipcode: zipcode,
			shippingaddress: shippingaddress,
			billingaddress: billingaddress,
		});

		writeFileSync(
			path.join(__dirname, '../db/customers.json'),
			JSON.stringify(customers)
		);

		res.status(201).json({
			message: 'Customer created successfully',
		});
	}
};

/**
 * @desc get single customer data
 * @name GET /api/v1/customer/:id
 * @access public
 */

const getSingleCustomer = (req, res) => {
	const customers = JSON.parse(
		readFileSync(path.join(__dirname, '../db/customers.json'))
	);
	const { id } = req.params;
	const singleCustomer = customers.find((data) => data.id == id);

	if (singleCustomer) {
		res.status(200).json(singleCustomer);
	} else {
		res.status(400).json({
			message: 'Customer Not Found',
		});
	}
};

/**
 * @desc delete single customer data
 * @name DELETE /api/v1/customer/:id
 * @access public
 */

const deleteCustomer = (req, res) => {
	const customers = JSON.parse(
		readFileSync(path.join(__dirname, '../db/customers.json'))
	);

	if (customers.some((data) => data.id == req.params.id)) {
		const dataAfterDeletion = customers.filter((data) => data.id != req.params.id);
		writeFileSync(
			path.join(__dirname, '../db/customers.json'),
			JSON.stringify(dataAfterDeletion)
		);
		res.status(200).json({
			message: 'Customer Deletion Successfull',
		});
	} else {
		res.status(404).json({
			message: 'Customer Data not Found to delete',
		});
	}
};

/**
 * @desc update single Customer data
 * @name PUT/PATCH /api/v1/customer/:id
 * @access public
 */

const updateCustomer = (req, res) => {
	const customers = JSON.parse(
		readFileSync(path.join(__dirname, '../db/customers.json'))
	);

	if (customers.some((data) => data.id == req.params.id)) {
		customers[customers.findIndex((data) => data.id == req.params.id)] = {
			...customers[customers.findIndex((data) => data.id == req.params.id)],
			...req.body,
		};
		writeFileSync(
			path.join(__dirname, '../db/customers.json'),
			JSON.stringify(customers)
		);
		res.status(200).json({
			message: 'Customer Update Successfull',
		});
	} else {
		res.status(404).json({
			message: 'Customer not found to update',
		});
	}
};

module.exports = {
	getAllCustomer,
	createCustomer,
	getSingleCustomer,
	deleteCustomer, 
	updateCustomer
};
